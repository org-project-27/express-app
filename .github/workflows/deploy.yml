name: Deploy Express.js App

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          ref: ${{ github.sha }}
          required_contexts: '[]'
          environment: 'production' # veya staging, test vs.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ./faynn.com/express-app
            pm2 stop express-app
            git pull
            npm install
            pm2 start express-app
          EOF
      
      - name: Update deployment status (success)
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments/:deployment/statuses
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          deployment: ${{ steps.create_deployment.outputs.id }}
          state: 'success'
          environment: 'production' # veya staging, test vs.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment status (failure)
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:owner/:repo/deployments/:deployment/statuses
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          deployment: ${{ steps.create_deployment.outputs.id }}
          state: 'failure'
          environment: 'production' # veya staging, test vs.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
